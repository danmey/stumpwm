#-(or sbcl clisp openmcl ecl) (error "This lisp implementation is not supported.")

(require 'asdf #+clisp'("asdf.lisp"))
#+(or clisp ecl) (load "@PPCRE_PATH@/cl-ppcre.asd")
(asdf:oos 'asdf:load-op 'stumpwm)
#-ecl (stumpwm:set-contrib-dir "@CONTRIB_DIR@")

#+sbcl
(sb-ext:save-lisp-and-die "stumpwm" :toplevel (lambda ()
                                                ;; asdf requires sbcl_home to be set, so set it to the value when the image was built
                                                (sb-posix:putenv (format nil "SBCL_HOME=~A" #.(sb-ext:posix-getenv "SBCL_HOME")))
                                                (stumpwm:stumpwm)
                                                0)
                          :executable t)

#+clisp
(ext:saveinitmem "stumpwm" :init-function (lambda ()
                                            (stumpwm:stumpwm)
                                            (ext:quit))
                 :executable t :keep-global-handlers t :norc t :documentation "The StumpWM Executable")

#+ccl
(ccl:save-application "stumpwm" :prepend-kernel t :toplevel-function #'stumpwm:stumpwm)

#+ecl
(asdf:make-build 'stumpwm :type :program :monolithic t
                 :move-here "."
                 :name-suffix ""
                 :epilogue-code '(progn
                                  (stumpwm:set-contrib-dir "@CONTRIB_DIR@")
                                  (stumpwm:stumpwm)))
